[tool.poetry]
name = "{{ distribution_name }}"
version = "{{ version }}"
description = "{{ project_short_description }}"
authors = [
  "{{ author_name }} <{{ author_email }}>"
]
license = "{{ license }}"
packages = [{include = "{{ package_name | replace('.', _copier_conf.sep) }}", from = "src"}]

[tool.poetry.dependencies]
python = "^{{ python_version }}"
{% if package_type == "cli" %}
typer = "^0.13.0"
{% endif %}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
ruff = "^0.9.7"
pep8-naming = "^0.13.3"
{% if testing_framework == "pytest" %}
pytest-mock = "^3.11.1"
{% endif %}
{% if type_checker == "mypy" %}
mypy = "^1.11.2"
{% endif %}
pre-commit = "^3.4.0"
bump2version = "^1.0.1"
detect-secrets = "^1.4.0"
{% if generate_docs == "mkdocs" %}
mkdocstrings-python = "^1.10.8"
mkdocs-material = "^9.5.32"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.1"
{% endif %}
{% if generate_docs == "pdoc" %}
pdoc = "^14.6"
{% endif %}
{% if use_jupyter_notebooks %}
ipykernel = "^6.29.4"
nbdime = "^4.0.1"

[tool.poetry.group.jupyterlab]
optional = true
dependencies = { jupyterlab = "^4.2.2"}
{% endif %}

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.core.masonry.api"
{% if package_type == "cli" %}

[tool.poetry.scripts]
{{ package_name.split('.')[-1] }} = "{{ package_name }}.cli:app"
{% endif %}

[tool.ruff]
line-length = {{ max_line_length }}
target-version = "py{{ python_version | replace('.', '') }}"

[tool.ruff.lint]

select = [
    "A",  # flake8-builtins,
    "D", # pydocstyle
    {% if testing_framework == "pytest" %}
    "PT", # flake8-pytest-style
    {% endif %}
    {% if use_flake8_strict_plugins %}
    "T20", # flake8-print
    "ERA", # eradicate
    "B", # flake8-bugbear
    {% endif %}
    "I" # isort
]
ignore = [
    # Docstring rules
    "D100",  # Ignore missing docstring in public modules
    "D103",  # Ignore missing docstring in public functions
    "D104",  # Ignore missing docstring in public packages
]

[tool.ruff.format]
preview = true

[tool.ruff.lint.per-file-ignores]
{% if package_type == "cli" %}
"src/{{ package_name }}/cli.py" = ["T"]
{% endif %}
"tests/*" = ["S101", "T20"]
"tests/test_*.py" = ["ANN"]
"tests/**/test_*.py" = ["ANN"]

[tool.pytest.ini_options]
pythonpath = "src"
{% if type_checker == "mypy" %}

[tool.mypy]
exclude = ["tests/*", "docs/*"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
{% if type_checker_strictness == "strict" %}
disallow_untyped_defs = true
{% endif %}
{% endif %}
