[tool.poetry]
name = "copier-python-template"
version = "2.1.0"
description = "Opinionated copier template for python projects"
authors = [
  "Ali Cem <ac@flowtale.ai>",
  "Anders Stendevad <as@flowtale.ai>",
  "Dmytro Kyrychuk <dmytro@flowtale.ai>",
  "Franz Maria Heuchel <fmh@flowtale.ai>",
  "Nikita Pekarchuk <np@flowtale.ai>",
  "Rasmus Jones <rj@flowtale.ai>",
  "Rogvi David Arge <rda@flowtale.ai>",
  "Simone Gaiarin <sg@flowtale.ai>",
  "Tobias Rehfeldt <tc@flowtale.ai>",
  "Vladyslav Kromkach <vk@flowtale.ai>",
]
license = "MIT license"
packages = [
  { include = "template", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.10"
tox = "^4.11.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
ruff = "^0.9.7"
pytest-mock = "^3.11.1"
mypy = "^1.11.2"
black = "^22.1.0"
pre-commit = "^3.4.0"
bump2version = "^1.0.1"
copier = "^9.1.0"
pytest-copier = "^0.4.1"
detect-secrets = "^1.4.0"

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]

select = [
    "E", # pycodestyle, basic flake8
    "W", # pycodestyle, basic flake8
    "F", # pyflakes, basic flake8
    "N", # pep8-naming, basic flake8
    "A",  # flake8-builtins,
    "D", # pydocstyle
    "PT", # flake8-pytest-style
    "I" # isort
]
ignore = [
    # Docstring rules
    "D100",   # Ignore missing docstring in public modules
    "D104",   # Ignore missing docstring in public packages
    "D105",   # Ignore missing docstring in magic methods
    # Bugbear rules
    "B904"   # Ignore exception-raises-generic
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"**/{tests}/*" = ["D1"]
"**/{docs,notebooks}/*" = ["T20", "S101", "E402", "D"]

# T20: Forbid the use of print
# S101: Forbid the use of assert
# F401: Ignore imported modules not used in __init__.py files
# E402: Ignore all module level imports should be at the top of the file.
# D: Ignore all docstring errors in autogenerated code

[tool.pytest.ini_options]
pythonpath = "src"
markers = [
    "slow: slow tests",
    "venv: tests that modify the virtual environment possibly causing interferences; should be run with tox",
]

[tool.mypy]
exclude = ["tests/*", "docs/*"]
follow_imports = "normal"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
